# Auth Server Environment Configuration Example
# Copy this file to .env.local and fill in the actual values

############ SERVER ENV ###########
# 애플리케이션 실행 환경
NODE_ENV=development
# HTTP API 서버 포트 (클라이언트 접근용)
PORT=8000
# TCP 마이크로서비스 포트 (서비스간 통신용)
TCP_PORT=8010
# CORS 허용 도메인 (콤마로 구분)
CORS_ORIGINS="http://localhost:3000, http://127.0.0.1:3000, http://localhost:3010, http://127.0.0.1:3010, http://localhost:3200, http://127.0.0.1:3200"
# 애플리케이션 이름
APP_NAME=auth-server
# 클라이언트 애플리케이션 URL
AUTH_CLIENT_URL=http://localhost:3000
PORTAL_CLIENT_URL=http://localhost:3200
ALLOWED_REDIRECT_DOMAINS="localhost:3000, 127.0.0.1:3000, localhost:3010, 127.0.0.1:3010, localhost:3200, 127.0.0.1:3200, localhost:3210, 127.0.0.1:3210"
ALLOWED_REDIRECT_PROTOCOLS="http, https"

############ DOCKER ENV ###########
# Docker 볼륨 경로 설정
MYSQL_VOLUME_PATH=./data/mysqldata
MYSQL_CONFIG_PATH=./config
REDIS_VOLUME_PATH=./data/redisdata

############ MYSQL ENV ############
# MySQL 서버 호스트 (Docker 컨테이너 이름)
# MYSQL_HOST=host.docker.internal  # Docker Desktop 사용시
MYSQL_HOST=auth-mysql
# MySQL 내부 포트 (컨테이너간 통신용)
MYSQL_PORT=3306
# MySQL 외부 접근 포트 (개발용 DB 툴 접속)
MYSQL_OPEN_PORT=3307
# MySQL 사용자명
MYSQL_USER=krgeobuk
# MySQL 사용자 비밀번호 (실제 값으로 변경 필요)
MYSQL_PASSWORD=your-mysql-password
# MySQL root 비밀번호 (실제 값으로 변경 필요)
MYSQL_ROOT_PASSWORD=your-mysql-root-password
# MySQL 데이터베이스 이름
MYSQL_DATABASE=auth

############ REDIS ENV ############
# Redis 서버 호스트 (Docker 컨테이너 이름)
# REDIS_HOST=host.docker.internal  # Docker Desktop 사용시
REDIS_HOST=auth-redis
# Redis 내부 포트 (컨테이너간 통신용)
REDIS_PORT=6379
# Redis 외부 접근 포트 (개발용 Redis 툴 접속)
REDIS_OPEN_PORT=6380
# Redis 비밀번호 (실제 값으로 변경 필요)
REDIS_PASSWORD=your-redis-password

############ GOOGLE OAUTH ENV ############
# Google OAuth 클라이언트 ID (Google Cloud Console에서 발급)
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
# Google OAuth 클라이언트 시크릿 (Google Cloud Console에서 발급)
GOOGLE_CLIENT_SECRET=your-google-client-secret
# Google OAuth 콜백 URL
GOOGLE_REDIRECT_URL=http://localhost:8000/api/oauth/login-google/callback
# Google OAuth 토큰 URL (고정값)
GOOGLE_TOKEN_URL=https://oauth2.googleapis.com/token
# Google 사용자 정보 API URL (고정값)
GOOGLE_USERINFO_URL=https://www.googleapis.com/oauth2/v2/userinfo

############ NAVER OAUTH ENV ############
# Naver OAuth 클라이언트 ID (Naver Developers에서 발급)
NAVER_CLIENT_ID=your-naver-client-id
# Naver OAuth 클라이언트 시크릿 (Naver Developers에서 발급)
NAVER_CLIENT_SECRET=your-naver-client-secret
# Naver OAuth 콜백 URL
NAVER_REDIRECT_URL=http://localhost:8000/api/oauth/login-naver/callback
# Naver OAuth 토큰 URL (고정값)
NAVER_TOKEN_URL=https://nid.naver.com/oauth2.0/token
# Naver 사용자 정보 API URL (고정값)
NAVER_USERINFO_URL=https://openapi.naver.com/v1/nid/me

# OAuth 리다이렉트 세션 Redis 키 접두사
OAUTH_REDIRECT_SESSION_STORE_NAME=redirectSession:

############ JWT ENV ############
# JWT 키 파일 경로 (generate-jwt-keys.sh 스크립트로 생성)
JWT_ACCESS_PRIVATE_KEY_PATH=./keys/access-private.key
JWT_ACCESS_PUBLIC_KEY_PATH=./keys/access-public.key
JWT_REFRESH_PRIVATE_KEY_PATH=./keys/refresh-private.key
JWT_REFRESH_PUBLIC_KEY_PATH=./keys/refresh-public.key

# JWT 토큰 만료 시간
JWT_ACCESS_EXPIRES_IN=15m     # Access Token: 15분
JWT_REFRESH_EXPIRES_IN=7d     # Refresh Token: 7일

# JWT 쿠키 설정
JWT_SESSION_COOKIE_PATH=/
JWT_REFRESH_MAX_AGE=604800000    # 7일 (밀리초)
# 쿠키 도메인 설정 (서브도메인 공유용)
JWT_COOKIE_DOMAIN=.krgeobuk.com  # 프로덕션: .yourdomain.com (점으로 시작)
JWT_COOKIE_DOMAIN_DEV=           # 개발환경: 빈값 (localhost 사용)

# Redis 저장소 키 접두사
JWT_REFRESH_STORE_NAME=refreshToken
JWT_BLACKLIST_STORE_NAME=blacklist:
JWT_NAVER_STATE_STORE_NAME=naverState:
JWT_GOOGLE_STATE_STORE_NAME=googleState:

# ============================================================================
# 설정 가이드
# ============================================================================
#
# 1. 이 파일을 .env.local로 복사하세요:
#    cp .env.example .env.local
#
# 2. 다음 값들을 실제 값으로 변경하세요:
#    - MYSQL_PASSWORD, MYSQL_ROOT_PASSWORD
#    - REDIS_PASSWORD
#    - GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET
#    - NAVER_CLIENT_ID, NAVER_CLIENT_SECRET
#
# 3. JWT 키 파일을 생성하세요:
#    bash script/generate-jwt-keys.sh
#
# 4. OAuth 애플리케이션을 등록하세요:
#    - Google: https://console.cloud.google.com/
#    - Naver: https://developers.naver.com/
#
# 5. Docker 환경을 시작하세요:
#    npm run docker:local:up
#
# ============================================================================